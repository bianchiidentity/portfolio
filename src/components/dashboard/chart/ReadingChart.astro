---
// 読書グラフコンポーネント
const { bookData = [] } = Astro.props;
---

<div class="bg-white/95 rounded-xl p-4 shadow-lg backdrop-blur-sm border border-white/20 transition-all duration-300 hover:-translate-y-1 hover:shadow-xl overflow-hidden w-full min-w-0">
  <h3 class="text-lg font-bold text-gray-800 m-0 mb-4 text-center">読書ページ数の推移</h3>
  <canvas id="readingChart" width="400" height="200" class="w-full h-[200px] md:h-[250px]"></canvas>
</div>

<script is:inline define:vars={{ bookData }}>
  // Chart.jsが読み込まれているか確認
  function initializeReadingChart() {
    if (typeof Chart === "undefined") {
      setTimeout(initializeReadingChart, 1000);
      return;
    }

    // データが空の場合は「データがありません」と表示
    const hasBookData = bookData && bookData.length > 0;

    // グラフの設定
    const chartOptions = {
      responsive: true,
      maintainAspectRatio: false,
      scales: {
        y: {
          beginAtZero: true,
        },
      },
      plugins: {
        legend: {
          display: true,
        },
      },
    };

    // 読書グラフの作成
    const readingCtx = document.getElementById("readingChart");
    if (readingCtx) {
      if (hasBookData) {
        try {
          const readingChartData = {
            labels: bookData.map((item) => item.date).reverse(),
            datasets: [
              {
                label: "読書ページ数",
                data: bookData.map((item) => item.pages_read || 0).reverse(),
                borderColor: "rgb(255, 99, 132)",
                backgroundColor: "rgba(255, 99, 132, 0.2)",
                tension: 0.1,
              },
            ],
          };

          new Chart(readingCtx, {
            type: "line",
            data: readingChartData,
            options: chartOptions,
          });
        } catch (error) {
          console.error("Error creating reading chart:", error);
        }
      } else {
        // データがない場合はメッセージを表示
        readingCtx.style.display = "none";
        const readingCard = readingCtx.closest(".chart-card");
        if (readingCard) {
          const messageDiv = document.createElement("div");
          messageDiv.className = "text-center py-8 text-gray-600 text-lg";
          messageDiv.textContent = "データがありません";
          readingCard.appendChild(messageDiv);
        }
      }
    }
  }

  // DOMが読み込まれてからグラフを作成
  document.addEventListener("DOMContentLoaded", function () {
    initializeReadingChart();
  });

  // フォールバック: DOMContentLoadedが既に発火している場合
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initializeReadingChart);
  } else {
    initializeReadingChart();
  }
</script>
