---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
const posts = await getCollection("blog");
---

<Layout>
  <main
    class="min-h-screen bg-gradient-to-br from-orange-100 to-orange-200 p-8 md:p-4 relative overflow-x-hidden"
  >
    <div
      class='absolute inset-0 bg-[url(&apos;data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>&apos;)] pointer-events-none'
    >
    </div>

    <div class="text-center mb-12 relative z-1">
      <h1
        class="text-5xl md:text-6xl lg:text-7xl font-extrabold bg-gradient-to-r from-amber-800 to-orange-600 bg-clip-text text-transparent mb-2 drop-shadow-sm animate-fadeInUp"
      >
        ブログ
      </h1>
      <p
        class="text-lg text-gray-700 font-medium m-0 animate-fadeInUp animation-delay-200"
      >
        技術的な発見と学びの記録
      </p>
    </div>

    {
      posts.length === 0 ? (
        <div class="text-center py-16 relative z-1 animate-bounce">
          <div class="text-6xl mb-4">📝</div>
          <p class="text-xl text-gray-700 mb-2">記事はまだありません。</p>
          <p class="text-gray-600">新しい記事を書く準備をしています...</p>
        </div>
      ) : (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-7xl mx-auto relative z-1">
          {posts.map((post, index) => {
            return (
              <article
                class="bg-white/90 rounded-2xl shadow-lg backdrop-blur-sm border border-white/20 transition-all duration-300 hover:-translate-y-2 hover:shadow-xl overflow-hidden animate-fadeInUp"
                style={`animation-delay: ${index * 0.1}s`}
              >
                <a
                  href={`/blog/${post.slug}`}
                  class="block p-6 no-underline text-inherit hover:no-underline hover:text-inherit"
                  aria-label={post.data.title + " の詳細ページへ"}
                >
                  <div class="mb-4">
                    <h2 class="text-xl font-bold text-gray-800 mb-3 leading-tight">
                      {post.data.title}
                    </h2>
                    <div class="flex items-center gap-3 text-sm">
                      <time
                        class="text-gray-500 font-medium"
                        datetime={post.data.date?.toISOString()}
                      >
                        {post.data.date?.toLocaleDateString("ja-JP", {
                          year: "numeric",
                          month: "long",
                          day: "numeric",
                        })}
                      </time>
                      <span class="text-orange-700 text-sm bg-orange-100 px-2 py-1 rounded-full">
                        📖 5分読了
                      </span>
                    </div>
                  </div>
                  <div class="text-gray-700 text-base leading-relaxed mb-6">
                    {post.data.summary}
                  </div>
                  <div class="flex justify-end">
                    <span class="text-orange-600 font-semibold text-sm transition-all duration-300 group-hover:text-orange-700 group-hover:translate-x-1">
                      続きを読む →
                    </span>
                  </div>
                </a>
              </article>
            );
          })}
        </div>
      )
    }
  </main>
</Layout>

<style>
  @layer components {
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-fadeInUp {
      animation: fadeInUp 0.8s ease-out;
    }

    .animation-delay-200 {
      animation-delay: 0.2s;
    }

    @keyframes bounce {
      0%,
      20%,
      50%,
      80%,
      100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-10px);
      }
      60% {
        transform: translateY(-5px);
      }
    }

    .animate-bounce {
      animation: bounce 2s infinite;
    }

    @media (max-width: 768px) {
      .blog-title {
        font-size: 2.5rem;
      }

      .posts-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }

      .post-card {
        margin: 0 1rem;
      }

      .post-link {
        padding: 1.5rem;
      }
    }

    @media (max-width: 480px) {
      .blog-container {
        padding: 1rem 0.5rem;
      }

      .blog-title {
        font-size: 2rem;
      }

      .post-title {
        font-size: 1.3rem;
      }
    }
  }
</style>
